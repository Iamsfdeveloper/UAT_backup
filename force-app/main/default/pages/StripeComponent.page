<!--
@description       : 
@author            : Iamsfdeveloper
@group             : 
@last modified on  : 04-22-2022
@last modified by  : Iamsfdeveloper
-->
<apex:page applyBodyTag="false" docType="html-5.0" applyHtmlTag="false" showHeader="false" sidebar="false" standardStylesheets="false" lightningStyleSheets="true"  controller="StripeController" action="{!getCustomer}">
    <apex:slds />
    <html>
        <head>
            <Style>
                .GraphicFormSubmitButtonDisabled {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 42px;
                padding: 0 12px;
                border-radius: var(--formFieldBorderRadius);
                background: #aa7ecb !important;
                color: var(--formButtonKnockoutColor) !important;
                font: var(--fontWeightSemibold) 16px/1.25 var(--fontFamily)!important;
                letter-spacing: .2px;
                }    
                .GraphicFormSubmitButton {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 42px;
                color: var(--formButtonKnockoutColor) !important;
                letter-spacing: 0.2px;
                padding: 0px 12px;
                border-radius: var(--formFieldBorderRadius);
                background: #662d91 !important;
                font: var(--fontWeightSemibold) 16px/1.25 var(--fontFamily)!important;
                } 
            </Style>
            <script src="https://js.stripe.com/v3/"></script>
            <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link type="text/css" rel="stylesheet" href="{!URLFOR($Resource.StripeCSS)}"/>
                    <script src="/soap/ajax/32.0/connection.js" type="text/javascript"/>
                        <script src="/soap/ajax/32.0/apex.js" type="text/javascript"/>
                            <script>  
                            
                            var elements;
            var stripe;
            var lexOrigin = '{!lexOrigin}';
            var paymentElement;
            window.onload = onLoad;
            async function onLoad() {
                
                stripe = await Stripe('{!publishableKey}');
                
                elements = stripe.elements({
                    'clientSecret': '{!paymentWrapper.client_Secret}'
                });
                
                paymentElement = elements.create('card', {
                    'hidePostalCode' : true,
                }
                                                );
                paymentElement.mount(document.querySelector(".paymentElement"));
                document.getElementById('spinner').className = 'slds-spinner_container slds-hide';
                paymentElement.on('change', function(event) {
                    
                    if (event.complete) {
                        disabledButton(false);
                    } else {
                        disabledButton(true);
                    }
                });
                
                
                
            }
            
            function handleSetupSubmit(event) {
                event.preventDefault();
                document.getElementById('spinner').className = 'slds-spinner_container slds-show';
                /*
                stripe.confirmCardSetup('{!paymentWrapper.client_Secret}', {
                    payment_method: {
                        card: paymentElement,
                        billing_details: {
                            name: '{!paymentWrapper.donorName}',
                        },
                    },
                })*/
                stripe.createPaymentMethod (
                    {
                        type: 'card',
                        card: paymentElement,
                        billing_details: {
                            name: '{!paymentWrapper.donorName}',
                        },
                    }).then(function(result) {
                    document.getElementById('spinner').className = 'slds-spinner_container slds-hide';
                    const customerId = '{!paymentWrapper.customerId}';
                    const message = {
                        'type': 'confirmSetup',
                        'data': result,
                        'customerId': customerId,
                        'setupIntentId':'{!paymentWrapper.paymentintentId}'
                    };
                    if (result.error) {
                        
                        disabledButton(false);
                        console.log("Error occured." + JSON.stringify(result.error));
                        window.parent.postMessage(message, lexOrigin);
                    } else {
                        disabledButton(false);
                        try {
                            window.parent.postMessage(message, lexOrigin);
                        } catch (err) {
                            console.log("err Occurred." + JSON.stringify(err));
                        }
                    } //end of else
                    
                    
                });
                
            }
            
            function handleSubmit(event) {
                event.preventDefault();
                document.getElementById('spinner').className = 'slds-spinner_container slds-show';
                /*
                stripe.confirmCardPayment('{!paymentWrapper.client_Secret}', {
                    payment_method: {
                        card: paymentElement,
                        billing_details: {
                            name: '{!paymentWrapper.donorName}',
                        },
                    },
                })*/
                stripe.createPaymentMethod (
                    {
                        type: 'card',
                        card: paymentElement,
                        billing_details: {
                            name: '{!paymentWrapper.donorName}',
                        },
                    }).then(function(result) {
                    
                    document.getElementById('spinner').className = 'slds-spinner_container slds-hide';
                    const customerId = '{!paymentWrapper.customerId}';
                    const message = {
                        'type': 'confirmPayment',
                        'data': result,
                        'customerId': customerId,
						'PaymentIntentId':'{!paymentWrapper.paymentintentId}'
                    };
                    if (result.error) {
                        
                        disabledButton(false);
                        console.log("Error occured." + JSON.stringify(result.error));
                        window.parent.postMessage(message, lexOrigin);
                    } else {
                        disabledButton(false);
                        try {
                            window.parent.postMessage(message, lexOrigin);
                        } catch (err) {
                            console.log("err Occurred." + JSON.stringify(err));
                        }
                    } //end of else
                    
                });
                
            }
            
            function confirmPayment(event) {
                let setupOnly = '{!setupOnly}';
                if (setupOnly) {
                    stripe.confirmSetup({
                        elements,
                        confirmParams: {
                            payment_method_data: {!billing_details}
                            
                        },
                        redirect: 'if_required',
                    }).then(function(result) {
                        document.getElementById('spinner').className = 'slds-spinner_container slds-hide';
                        const message = {
                            'type': 'confirmPayment',
                            'data': result
                        };
                        if (result.error) {
                            
                            disabledButton(false);
                            console.log("Error occured." + JSON.stringify(result.error));
                            window.parent.postMessage(message, lexOrigin);
                        } else {
                            disabledButton(false);
                            try {
                                window.parent.postMessage(message, lexOrigin);
                            } catch (err) {
                                console.log("err Occurred." + JSON.stringify(err));
                            }
                        } //end of else
                        
                    });
                } else {
                    stripe.confirmPayment({
                        elements,
                        confirmParams: {
                            payment_method_data: {!billing_details}
                            
                        },
                        redirect: 'if_required',
                    }).then(function(result) {
                        document.getElementById('spinner').className = 'slds-spinner_container slds-hide';
                        const message = {
                            'type': 'confirmPayment',
                            'data': result
                        };
                        console.log('message==>' + JSON.stringify(result));
                        if (result.error) {
                            
                            disabledButton(false);
                            window.parent.postMessage(message, lexOrigin);
                        } else {
                            disabledButton(false);
                            try {
                                window.parent.postMessage(message, lexOrigin);
                            } catch (err) {
                                console.log("err Occurred." + JSON.stringify(err));
                            }
                        } //end of else
                        
                    }); //close of confirmPayment
                }
                
            }       
            </script>
        </head>
        <body >
            <div class="slds-scope">
                <apex:form id="theForm" prependId="false" >
                    <apex:pageMessages />
                    <div id="spinner" class="slds-spinner_container slds-show" >
                        <div role="status" class="slds-spinner slds-spinner--large slds-spinner--brand">
                            <div class="slds-spinner__dot-a"></div>
                            <div class="slds-spinner__dot-b"></div>
                        </div>
                    </div>                
                    <apex:actionFunction name="disabledButton" action="{!disableBtn}" reRender="disableBtnId" >
                        <apex:param name="isDisabled" value="" assignTo="{!isDisabled}"/>
                    </apex:actionFunction>
                    <div class="slds-card GraphicForm ElementsGlobalPaymentCarousel__graphicForm GraphicForm--alignMiddle">
                        <div class="GraphicForm__content slds-m-around_medium">
                            <div class="paymentElement"></div>
                            <apex:outputPanel id="disableBtnId">
                                <div class="GraphicFormFieldList ">
                                    <apex:commandButton status="myAjaxStatus" onclick="{!IF(isDisabled,'','handleSubmit(event);')}" disabled="{!isDisabled}" styleClass="{! IF(isDisabled,'GraphicFormSubmitButtonDisabled','GraphicFormSubmitButton')}" value="{!buttonLabel&' '&paymentWrapper.currencyIsoSymbol}{!paymentWrapper.Amount}" immediate="true" rendered="{!!setupOnly}"/>
                                    <apex:commandButton status="myAjaxStatus" onclick="{!IF(isDisabled,'','handleSetupSubmit(event);')}" disabled="{!isDisabled}" styleClass="{! IF(isDisabled,'GraphicFormSubmitButtonDisabled','GraphicFormSubmitButton')}" value="Setup Only" immediate="true" rendered="{!setupOnly}"/>
                                </div>
                            </apex:outputPanel>
                        </div>
                    </div>
                </apex:form>
            </div>
        </body>
    </html>
</apex:page>