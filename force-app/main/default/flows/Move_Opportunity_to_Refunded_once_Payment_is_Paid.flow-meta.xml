<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>54.0</apiVersion>
    <decisions>
        <name>Check_Conditions</name>
        <label>Check Conditions</label>
        <locationX>182</locationX>
        <locationY>335</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Check_if_Payment_is_tied_to_a_Refund_Opportunity</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record__Prior.npe01__Paid__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record.npe01__Paid__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.npe01__Opportunity__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.npe01__Opportunity__r.Refund_Approval__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Approved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.npe01__Opportunity__r.RecordType.Name</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Refund</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Opportunity_to_Refunded</targetReference>
            </connector>
            <label>Check if Payment is tied to a Refund Opportunity</label>
        </rules>
    </decisions>
    <interviewLabel>Move Opportunity to Refunded once Payment is Paid {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Move Opportunity to Refunded once Payment is Paid</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordUpdates>
        <name>Update_Opportunity_to_Refunded</name>
        <label>Update Opportunity to Refunded</label>
        <locationX>50</locationX>
        <locationY>455</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.npe01__Opportunity__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>StageName</field>
            <value>
                <stringValue>Refunded</stringValue>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Check_Conditions</targetReference>
        </connector>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>npe01__Paid__c</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>npe01__OppPayment__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
